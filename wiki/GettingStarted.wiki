#summary Getting started with gwt-pixlr library.
#labels Featured

= Table of Contents =

<wiki:toc max_depth="2" />

= Setup =

First, you need to add the gwt-pixlr jar files to your project's build path.

== Setting your project with Eclipse (without maven) ==

 # Right-click on the project node in the Package Explorer and select 'Build Path > Add External Archives...'.
 # Specify the downloaded *gwt-pixlr-all`<`version`>`.jar*

This jar contains everything you need to get started with both client and server side components of the library.

If you only need the client-side components, use this jar instead:
 * *gwt-pixlr-client`<`version`>`.jar*

If you only need the server-side components, use this jar instead:
 * *gwt-pixlr-server`<`version`>`.jar*

== Setting up your project with Maven ==
If you use Maven to build you project (what i personally recommend) you can easily set your project with gwt-pixlr by adding the following dependency to your *pom.xml*:

{{{
<dependency>
	<groupId>com.tinesoft</groupId>
	<artifactId>gwt-pixlr-all</artifactId>
	<version>1.0.0</version>
</dependency>
}}}

This dependency is a compound jar that contains both Client and Server side components of the library in a single jar.

 * If you only need the client-side components, use this dependency instead:
{{{
<dependency>
	<groupId>com.tinesoft</groupId>
	<artifactId>gwt-pixlr-client</artifactId>
	<version>1.0.0</version>
</dependency>
}}}

 * If you only need the server-side components, use this dependency instead:
{{{
<dependency>
	<groupId>com.tinesoft</groupId>
	<artifactId>gwt-pixlr-server</artifactId>
	<version>1.0.0</version>
</dependency>
}}}

The dependency will soon be published on Maven Central. So nothing more is required to have it working.

But if you want to use a snapshot (= under development) version of the library, you must add the following in the *`<`repositories`>`* section of your pom.xml:
{{{
<repository>
        <id>sonatype.snapshots</id>
        <name>Sonatype snapshot repository</name>
        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>  
        <layout>default</layout>
</repository>
}}}

== Configuring your  `*`.gwt.xml Module ==

Modify *`<`YourApplication`>`.gwt.xml* to inherit the gwt-pixlr module:
{{{
  <inherits name='com.tinesoft.gwt.pixlr.GWTPixlr' />
}}}


= Using the library (Client Side) =

Theses are the required steps to start using the library client-side:
 # Create and add a *PixlrWidget* to your application UI.
 # Create and configure a *PixlrSettings* object and affects it to the widget by calling: <code language="java">yourPixlrWidget.setSettings(yourSettings)</code>
 
That's all that's needed. Really! 


=== Adding the widget without uibinder ===

Easy. Just create and add the PixlrWidget in your application layout, as any  other GWT widget.

*MyView.java*:
{{{
...
PixlrWidget yourPixlrWidget = new PixlrWidget();
panel.add(yourPixlrWidget);
...
}}}

=== Adding the widget with uibinder ===
*MyView.ui.xml:*
{{{
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">

<ui:UiBinder xmlns:ui='urn:ui:com.google.gwt.uibinder'
    xmlns:g='urn:import:com.google.gwt.user.client.ui'
    xmlns:my='urn:import:com.tinesoft.gwt.pixlr.client.ui'
    ui:generateFormat='com.google.gwt.i18n.rebind.format.PropertiesFormat'
    ui:generateKeys='com.google.gwt.i18n.rebind.keygen.MD5KeyGenerator'
    ui:generateLocales='default'>


<g:FlowPanel>
  ...
  <my:PixlrWidget ui:field="pixlrWidget" width="600" height="600"/>
  ...
</g:FlowPanel>
<ui:Uibinder>

}}}

====Explanation ====

 * Define the namespace prefix for widgets used to build the pixlr widget. Here i have chosen *my* as prefix, and the package containing the widgets is *com.tinesoft.gwt.pixlr.client.ui*. So the namespace definition will be: 
{{{
xmlns:my='urn:import:com.tinesoft.gwt.pixlr.client.ui'
}}}
 * Add the pixlr widget
   * define the `ui:field` to later access to it in the java code
   * define widget's dimension (width and height):
{{{
<g:FlowPanel>
  ...
  <my:PixlrWidget ui:field="pixlrWidget" width="600" height="600"/>
  ...
</g:FlowPanel>
}}}


*MyView.java:*
{{{
...
@UiField
PixlrWidget pixlrWidget;
...


}}}